[{"E:\\Programming\\Javascript\\weatherandforecast\\src\\index.js":"1","E:\\Programming\\Javascript\\weatherandforecast\\src\\reportWebVitals.js":"2","E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\App.js":"3","E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\Header.js":"4","E:\\Programming\\Javascript\\weatherandforecast\\src\\config.js":"5","E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\buttons\\TopButtons.js":"6","E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\forecastSection\\index.js":"7","E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\forecastSection\\Forecast.js":"8","E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\chart\\index.js":"9","E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\forecastSection\\ForecastListItem.js":"10","E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\helperFunctions.js":"11","E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\chart\\chartSettings.js":"12","E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\forecastSection\\ForecastItems.js":"13","E:\\Programming\\Javascript\\weatherandforecast\\src\\setupTests.js":"14","E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\Map.js":"15"},{"size":601,"mtime":1607361760991,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1604939613828,"results":"18","hashOfConfig":"17"},{"size":4093,"mtime":1607421783031,"results":"19","hashOfConfig":"17"},{"size":2311,"mtime":1607378845980,"results":"20","hashOfConfig":"17"},{"size":89,"mtime":1605626182252,"results":"21","hashOfConfig":"17"},{"size":559,"mtime":1605625534591,"results":"22","hashOfConfig":"17"},{"size":506,"mtime":1605557674001,"results":"23","hashOfConfig":"17"},{"size":689,"mtime":1605703234904,"results":"24","hashOfConfig":"17"},{"size":985,"mtime":1605787624958,"results":"25","hashOfConfig":"17"},{"size":844,"mtime":1605784535883,"results":"26","hashOfConfig":"17"},{"size":1852,"mtime":1605787781216,"results":"27","hashOfConfig":"17"},{"size":2114,"mtime":1605787380290,"results":"28","hashOfConfig":"17"},{"size":962,"mtime":1605787684382,"results":"29","hashOfConfig":"17"},{"size":241,"mtime":1604939613828,"results":"30","hashOfConfig":"17"},{"size":1006,"mtime":1607378854522,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fd1gav",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},"E:\\Programming\\Javascript\\weatherandforecast\\src\\index.js",[],"E:\\Programming\\Javascript\\weatherandforecast\\src\\reportWebVitals.js",[],"E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\App.js",["64"],"import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { Button,  Spinner } from 'reactstrap';\nimport Header from \"./Header\";\nimport ForecastSection from \"./forecastSection\";\nimport TopButtons from './buttons/TopButtons'\nimport env from '../config';\nimport MyMap from './Map'\n\n\nconst [Warszawa, Kiskunmajsa, Budapest, Brenna] = [{ name: 'Warszawa', lat: 52.22, lon: 21.01 }, { name: 'Kiskunmajsa', lat: 46.49, lon: 19.73 }, { name: 'Budapest', lat: 47.49, lon: 19.04 },{ name: 'Brenna', lat: 49.732987, lon: 18.920351 }];\nconst { APIkey } = env\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weather: null,\n      forecast: null,\n      error: null,\n      cityName: \"Warszawa\",\n      curCity: { lat: 52.22, lon: 21.01, name: \"Warszawa\" }\n    };\n  }\n\n  componentDidMount() {\n    const { curCity } = this.state\n    this.downloadWeather(curCity);\n  }\n\n  checkWeatherByCoord = () => {\n\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        const lon = parseFloat(position.coords.longitude).toFixed(4);\n        const lat = parseFloat(position.coords.latitude).toFixed(4);\n        Axios(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=&appid=${APIkey}&units=metric`).then(\n          weather => {\n            this.setState({\n              weather: weather.data.current,\n              cityName: `Latitude:${lat} Longitude:${lon}`,\n              forecast: weather.data.daily,\n              curCity:{lat,lon}\n            });\n          },\n          error => {\n            this.setState({\n              error\n            });\n          }\n        );\n      },\n    );\n  };\n\n  downloadWeather(city) {\n    const { lat, lon, name } = city\n    Axios(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=&appid=${APIkey}&units=metric`).then(\n      weather => {\n        this.setState({ cityName: name, weather: weather.data.current, forecast: weather.data.daily,curCity:{lat,lon} });\n      },\n      error => {\n        this.setState({ error });\n      }\n    );\n  }\n\n\n\n\n  render() {\n    const { error, weather, forecast, cityName, curCity } = this.state;\n    const spinner = (\n      <div className=\"d-flex justify-content-center align-middle\">\n        <Spinner color=\"primary\" />\n      </div>\n    )\n\n    const mapSection = weather ? <div className=\"mapcontainer\"><MyMap curCity={curCity} weather={weather}/></div> : spinner\n    if (error) {\n      return <div>Error</div>;\n    }\n    return (\n      <div className=\"container\">\n        <TopButtons />\n        <div className=\"jumbotron\">\n          <h1 className=\"text-center\">\n            Current Weather\n          </h1>\n          {/* <div className=\"text-center d-flex justify-content-center\">\n            <h2 className=\"cityname\">{cityName}</h2>\n          </div> */}\n          {mapSection}\n          <div className=\"d-flex justify-content-center flex-wrap\">\n            <Button\n              className=\"m-2\"\n              onClick={() => this.downloadWeather(Warszawa)}\n            >\n              Warszawa\n            </Button>\n            <Button\n              className=\"m-2\"\n              onClick={() => this.downloadWeather(Kiskunmajsa)}\n            >\n              Kiskunmajsa\n            </Button>\n            <Button\n              className=\"m-2\"\n              onClick={() => this.downloadWeather(Budapest)}\n            >\n              Budapest\n            </Button>\n            <Button\n              className=\"m-2\"\n              onClick={() => this.downloadWeather(Brenna)}\n            >\n              Brenna\n            </Button>\n            <Button\n              className=\"m-2\"\n              onClick={this.checkWeatherByCoord}\n            >\n              Check My Location\n            </Button>\n          </div>\n          {weather ? <Header weather={weather} /> : spinner}\n        </div>\n        <div className=\"text-center\">\n          <h1 className=\"mb-4\">Weather Forecast</h1>\n          {forecast ? <ForecastSection forecast={forecast} /> : spinner}\n        </div>\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n\n","E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\Header.js",[],"E:\\Programming\\Javascript\\weatherandforecast\\src\\config.js",[],"E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\buttons\\TopButtons.js",[],"E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\forecastSection\\index.js",[],"E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\forecastSection\\Forecast.js",[],"E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\chart\\index.js",[],"E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\forecastSection\\ForecastListItem.js",[],"E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\helperFunctions.js",[],"E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\chart\\chartSettings.js",[],"E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\forecastSection\\ForecastItems.js",[],"E:\\Programming\\Javascript\\weatherandforecast\\src\\setupTests.js",[],"E:\\Programming\\Javascript\\weatherandforecast\\src\\components\\Map.js",["65"],"import ReactMapboxGl, {  Marker } from 'react-mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport React from 'react';\r\n\r\nconst Map = ReactMapboxGl({\r\n  accessToken:\r\n    'pk.eyJ1IjoiZmxhZmk4NyIsImEiOiJjanpzYjlhYWEwcGJiM2NwbzQwd3FqaXkwIn0.5CeZemKLYgK4JI4AHSM3lA'\r\n});\r\n\r\nconst MyMap = ({ curCity, weather }) => {\r\n  const { temp } = weather\r\n  const weatherCondition = `owf owf-${weather.weather[0].id} owf-5x`;\r\n  const { lon, lat } = curCity\r\n  React.useEffect(() => { console.log(\"component updated\"); });\r\n  console.log(curCity);\r\n\r\n  const map =\r\n    (<Map\r\n      style=\"mapbox://styles/mapbox/streets-v9\" className=\"mapbox-container\" center={[lon, lat]} zoom={[8]}\r\n    >\r\n      <Marker\r\n        coordinates={[lon, lat]}\r\n        anchor=\"bottom\">\r\n        <div className={weatherCondition} />\r\n        <p className = 'map-marker'>\r\n          {temp}\r\n          {' '}\r\n                  C°\r\n                </p>\r\n      </Marker>\r\n    </Map>)\r\n  return (map)\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default MyMap\r\n",{"ruleId":"66","severity":1,"message":"67","line":71,"column":39,"nodeType":"68","messageId":"69","endLine":71,"endColumn":47},{"ruleId":"70","severity":1,"message":"71","line":19,"column":7,"nodeType":"72","endLine":19,"endColumn":48},"no-unused-vars","'cityName' is assigned a value but never used.","Identifier","unusedVar","react/style-prop-object","Style prop value must be an object","JSXAttribute"]